<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
    <interface name="com.kylinsec.Kiran.SessionDaemon.Power">

        <method name="SetIdleAction">
            <arg type="i" name="device" direction="in">
                <description>The device could be computer or backlight. Refer to PowerDeviceType definition in power-i.h</description>
            </arg>
            <arg type="i" name="supply" direction="in">
                <description>Refer to PowerSupplyMode definition in power-i.h.</description>
            </arg>
            <arg type="i" name="idle_timeout" direction="in">
                <description>The idle timeout in seconds. If the value is less than or equal to 0, then the idle action will be cancel and the action field is ignored.</description>
            </arg>
            <arg type="i" name="action" direction="in">
                <description>Refer to PowerAction definition in power-i.h, etc.</description>
            </arg>
            <description>If the idle time of the device exceed idle_timeout, then it will trigger the action.</description>
        </method>

        <method name="GetIdleAction">
            <arg type="i" name="device" direction="in" />
            <arg type="i" name="supply" direction="in" />
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="IdleAction"/>
            <arg type="(ii)" name="idle_action" direction="out">
                <description>The field contains idle timeout and action.</description>
            </arg>
            <description>Get the idle action for the specified device on the supply.</description>
        </method>

        <method name="SetEventAction">
            <arg type="i" name="event" direction="in">
                <description>Refer to PowerEvent definition in power-i.h.</description>
            </arg>
            <arg type="i" name="action" direction="in">
                <summary>The triggered action.</summary>
            </arg>
            <description>The action is triggered when the event is happened.</description>
        </method>

        <method name="GetEventAction">
            <arg type="i" name="event" direction="in" />
            <arg type="i" name="action" direction="out" />
            <description>The action when the event is happened.</description>
        </method>

        <method name="SetBrightness">
            <arg type="i" name="device" direction="in">
                <description>The device could be monitor or keyboard. Refer to PowerDeviceType definition in power-i.h</description>
            </arg>
            <arg type="i" name="brightness_percentage" direction="in">
                <summary>The brightness percentage.</summary>
            </arg>
            <description>Set the brightness percentage for the specified device.</description>
        </method>

        <method name="GetBrightness">
            <arg type="i" name="device" direction="in" />
            <arg type="i" name="brightness_percentage" direction="out" />
            <description>Get the brightness percentage for the specified device. Return -1 if the device doesn't support brightness setting.</description>
        </method>

        <method name="EnableDisplayIdleDimmed">
            <arg type="b" name="enabled" direction="in">
                <description>Whether display dimmed when computer is idle.</description>
            </arg>
            <description>Enable display dimmed when computer is idle.</description>
        </method>

        <method name="EnableChargeLowDimmed">
            <arg type="b" name="enabled" direction="in">
                <description>Whether display dimmed when the ups or battery power is low.</description>
            </arg>
            <description>Enable display dimmed when the ups or battery power is low.</description>
        </method>

        <method name="EnableChargeLowSaver">
            <arg type="b" name="enabled" direction="in">
                <description>Whether does the cpu save energy when the ups or battery power is low.</description>
            </arg>
            <description>Enable cpu save energy when the ups or battery power is low.</description>
        </method>

        <method name="SwitchProfile">
            <arg type="i" name="mode" direction="in">
                <description>The profile mode. Refer to PowerProfileMode in power-i.h</description>
            </arg>
            <description>Switch profile mode.</description>
        </method>

        <property name="OnBattery" type="b" access="read">
            <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
            <description>Indicates whether the system is running on battery power.</description>
        </property>

        <property name="LidIsPresent" type="b" access="read">
            <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
            <description>If the system has a lid device.</description>
        </property>

        <property name="DisplayIdleDimmedEnabled" type="b" access="read">
            <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
            <description>Whether does the display darken when the computer is idle.</description>
        </property>

        <property name="ChargeLowDimmedEnabled" type="b" access="read">
            <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
            <description>Whether does the display darken when the ups or battery power is low.</description>
        </property>

        <property name="ChargeLowSaverEnabled" type="b" access="read">
            <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
            <description>Whether does the cpu save energy when the ups or battery power is low.</description>
        </property>

        <property name="ActiveProfile" type="i" access="read">
            <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
            <description>The active profile mode.</description>
        </property>

        <signal name="IdleActionChanged">
            <arg name="device" type="i" />
            <arg name="supply" type="i" />
        </signal>

        <signal name="EventActionChanged">
            <arg name="event" type="i" />
        </signal>

        <signal name="BrightnessChanged">
            <arg name="device" type="i" />
        </signal>

        <signal name="ActiveProfileChanged">
            <arg name="active_profile" type="i" />
        </signal>

    </interface>
</node>
